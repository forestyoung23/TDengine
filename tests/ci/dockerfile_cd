FROM centos:7.9.2009 AS builder

# 设置工作目录
WORKDIR /home

# 定义变量
ARG INSTALLERS_DIR=installers

# install base dependencies
RUN curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo \
    && yum makecache fast \
    && yum install -y epel-release \
    && yum update -y \
    && yum install -y --setopt=tsflags=nodocs \
        gcc make perl gcc-c++ xz curl psmisc geos glog valgrind rsync jemalloc \
        openssh-server sshpass net-tools gnupg2 libarchive snappy-devel pkgconfig \
        libatomic perl-IPC-Cmd libcurl-devel libxml2-devel ca-certificates libicu-devel \
        R-core iputils bison flex glibc-static libstdc++-static libstdc++-devel \
        openssl-devel gflags jansson jansson-devel snappy xz-devel zlib-devel zlib \
        bzip2-devel zlib-static libs3 git \
    && yum clean all \
    && rm -rf /var/cache/yum

# config ssh
RUN mkdir -p /root/.ssh
COPY config id_ed25519_github id_ed25519_github.pub /root/.ssh/ 


# set jdk and mvn version
ARG DEFAULT_JDK_VERSION=17
ARG DEFAULT_MVN_VERSION=3.9.9
# install sdkman 
# install java mavnen with sdkman
RUN curl --retry 10 --retry-delay 5 --retry-max-time 120 -s "https://get.sdkman.io" | bash  \
    && source "$HOME/.sdkman/bin/sdkman-init.sh" \
    && yes | sdk install java "$DEFAULT_JDK_VERSION-open" &&  yes | sdk install maven "$DEFAULT_MVN_VERSION"

# install nvm
RUN curl --retry 10 --retry-delay 5 --retry-max-time 120 -o- https://raw.githubusercontent.com/nvm-sh/nvm/"$DEFAULT_NVM_VERSION"/install.sh | bash 

# set version
ARG DEFAULT_NVM_VERSION=v0.40.3
ARG DEFAULT_NODE_VERSION=16.19.1

# 安装 Node.js/pnpm/yarn
RUN export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && [ -s "$NVM_DIR/bash_completion" ]  \
    && \. "$NVM_DIR/bash_completion" && source $NVM_DIR/nvm.sh && source $NVM_DIR/bash_completion  \
    && nvm install "$DEFAULT_NODE_VERSION" && nvm alias default "$DEFAULT_NODE_VERSION" && nvm use default  \
    && npm config set fetch-retry-maxtimeout 120000 && npm config set fetch-retry-factor 5 \
    && npm config set registry=https://registry.npmmirror.com \
    && npm install --global yarn \
    && npm install --global pnpm 

# COPY requirements.txt /home/

# 配置 pip


# 安装 Go、JDK、Maven、Node.js（优化解压路径）
ADD go1.23.4.linux-amd64.tar.gz /usr/local/
ADD cmake-3.21.5-linux-x86_64.tar.gz /usr/local/
ADD Python-3.10.12.tgz /usr/local/
RUN rm -rf go1.23.4.linux-amd64.tar.gz cmake-3.21.5-linux-x86_64.tar.gz Python-3.10.12.tgz


# 安装 Python 3.10

# 配置 pip
# RUN pip3 config set global.index-url http://admin:123456@192.168.0.212:3141/admin/dev/+simple/ \
#     && pip3 config set global.trusted-host 192.168.0.212 \
#     && pip3 install --no-cache-dir -r /home/requirements.txt \
#     && pip3 install --no-cache-dir \
#         taospy==2.7.23 taos-ws-py==0.3.8 pandas psutil codecov fabric2 requests faker simplejson toml \
#         pexpect tzlocal distro decorator loguru hyperloglog websockets 


# 安装 Rust（优化安装过程）
RUN curl https://rsproxy.cn/rustup-init.sh -o rustup-init.sh \
    && chmod +x rustup-init.sh \
    && RUSTUP_DIST_SERVER="https://rsproxy.cn" \
       RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup" \
       ./rustup-init.sh -y --no-modify-path --default-toolchain stable \
    && rm rustup-init.sh \
    && echo "export RUSTUP_DIST_SERVER=\"https://rsproxy.cn\"" >> /root/.bashrc \
    && echo "export RUSTUP_UPDATE_ROOT=\"https://rsproxy.cn/rustup\"" >> /root/.bashrc
COPY .cargo/config /root/.cargo/config

# 配置环境变量
ENV PATH="/usr/local/go/bin:/usr/local/node-v20.17.0-linux-x64/bin:/usr/local/apache-maven-3.8.4/bin:/usr/local/jdk1.8.0_144/bin:/root/.cargo/bin:/home/bin:/usr/local/cmake-3.21.5-linux-x86_64/bin:$PATH"
ENV JAVA_HOME="/usr/local/jdk1.8.0_144"
ENV RUSTUP_DIST_SERVER="https://rsproxy.cn"  RUSTUP_UPDATE_ROOT="https://rsproxy.cn/rustup"
RUN go env -w GOPROXY=https://goproxy.cn && rustup install nightly 


# COPY ../.nuget /root/.nuget
# COPY ../.dotnet /root/.dotnet
# COPY ../.npm /root/.npm

# 配置 SSH（优化配置并设置权限）
RUN mkdir -p /root/.ssh \
    && chmod 700 /root/.ssh \
    && echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config \
    && chmod 600 /root/.ssh/id_ecdsa \
    && chmod 600 /root/.ssh/authorized_keys
